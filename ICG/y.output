State 113 conflicts: 2 shift/reduce
State 114 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: entry '(' ')' '{' body return '}'

    2 entry: datatype ID

    3 datatype: INT
    4         | FLOAT
    5         | CHAR
    6         | BOOL

    7 body: block body
    8     | ε

    9 $@1: ε

   10 block: WHILE $@1 '(' condition ')' '{' body '}'

   11 $@2: ε

   12 $@3: ε

   13 $@4: ε

   14 block: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 else
   15      | statement ';'

   16 $@5: ε

   17 block: PRINTFF $@5 '(' printparam ')' ';'

   18 $@6: ε

   19 $@7: ε

   20 block: SCANFF $@6 '(' STR ',' '&' ID $@7 ')' ';'

   21 printparam: valcharbool
   22           | STR

   23 $@8: ε

   24 else: ELSE $@8 '{' body '}'
   25     | ε

   26 M: ε

   27 condition: condition AND M condition
   28          | condition OR M condition
   29          | valcharbool relop valcharbool

   30 $@9: ε

   31 condition: TRUE $@9

   32 $@10: ε

   33 condition: FALSE $@10

   34 $@11: ε

   35 statement: DECLARE datatype ID $@11 init

   36 $@12: ε

   37 statement: ID $@12 '=' expression

   38 $@13: ε

   39 statement: ID $@13 relop expression

   40 init: '=' charbool
   41     | '=' expression

   42 expression: expression addops term
   43           | term

   44 term: term mulops factor
   45     | factor

   46 factor: base exponent base
   47       | LOG '(' value ',' value ')'
   48       | base

   49 base: value
   50     | '(' expression ')'

   51 exponent: POW

   52 mulops: MULTIPLY
   53       | DIVIDE

   54 addops: ADD
   55       | SUBTRACT

   56 relop: LT
   57      | GT
   58      | LTE
   59      | GTE
   60      | EQ
   61      | NE

   62 value: NUMBER
   63      | FLOAT_NUM
   64      | ID

   65 charbool: bools
   66         | CHARACTER

   67 valcharbool: value
   68            | charbool

   69 bools: TRUE
   70      | FALSE

   71 $@14: ε

   72 return: RETURN $@14 valcharbool ';'
   73       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 20
    '(' (40) 1 10 14 17 20 47 50
    ')' (41) 1 10 14 17 20 47 50
    ',' (44) 20 47
    ';' (59) 15 17 20 72
    '=' (61) 37 40 41
    '{' (123) 1 10 14 24
    '}' (125) 1 10 14 24
    error (256)
    PRINTFF <nd_obj> (258) 17
    SCANFF <nd_obj> (259) 20
    IF <nd_obj> (260) 14
    ELSE <nd_obj> (261) 24
    WHILE <nd_obj> (262) 10
    RETURN <nd_obj> (263) 72
    DECLARE <nd_obj> (264) 35
    ADD <nd_obj> (265) 54
    SUBTRACT <nd_obj> (266) 55
    MULTIPLY <nd_obj> (267) 52
    DIVIDE <nd_obj> (268) 53
    LOG <nd_obj> (269) 47
    POW <nd_obj> (270) 51
    GTE <nd_obj> (271) 59
    LTE <nd_obj> (272) 58
    GT <nd_obj> (273) 57
    LT <nd_obj> (274) 56
    EQ <nd_obj> (275) 60
    NE <nd_obj> (276) 61
    TRUE <nd_obj> (277) 31 69
    FALSE <nd_obj> (278) 33 70
    AND <nd_obj> (279) 27
    OR <nd_obj> (280) 28
    INT <nd_obj> (281) 3
    FLOAT <nd_obj> (282) 4
    CHAR <nd_obj> (283) 5
    BOOL <nd_obj> (284) 6
    NUMBER <nd_obj> (285) 62
    FLOAT_NUM <nd_obj> (286) 63
    ID <nd_obj> (287) 2 20 35 37 39 64
    STR <nd_obj> (288) 20 22
    CHARACTER <nd_obj> (289) 66


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <nd_obj> (44)
        on left: 1
        on right: 0
    entry <nd_obj> (45)
        on left: 2
        on right: 1
    datatype <nd_obj> (46)
        on left: 3 4 5 6
        on right: 2 35
    body <nd_obj> (47)
        on left: 7 8
        on right: 1 7 10 14 24
    block <nd_obj> (48)
        on left: 10 14 15 17 20
        on right: 7
    $@1 (49)
        on left: 9
        on right: 10
    $@2 (50)
        on left: 11
        on right: 14
    $@3 (51)
        on left: 12
        on right: 14
    $@4 (52)
        on left: 13
        on right: 14
    $@5 (53)
        on left: 16
        on right: 17
    $@6 (54)
        on left: 18
        on right: 20
    $@7 (55)
        on left: 19
        on right: 20
    printparam <nd_obj> (56)
        on left: 21 22
        on right: 17
    else <nd_obj> (57)
        on left: 24 25
        on right: 14
    $@8 (58)
        on left: 23
        on right: 24
    M <nd_obj4> (59)
        on left: 26
        on right: 27 28
    condition <nd_obj3> (60)
        on left: 27 28 29 31 33
        on right: 10 14 27 28
    $@9 (61)
        on left: 30
        on right: 31
    $@10 (62)
        on left: 32
        on right: 33
    statement <nd_obj> (63)
        on left: 35 37 39
        on right: 15
    $@11 (64)
        on left: 34
        on right: 35
    $@12 (65)
        on left: 36
        on right: 37
    $@13 (66)
        on left: 38
        on right: 39
    init <nd_obj2> (67)
        on left: 40 41
        on right: 35
    expression <nd_obj2> (68)
        on left: 42 43
        on right: 37 39 41 42 50
    term <nd_obj2> (69)
        on left: 44 45
        on right: 42 43 44
    factor <nd_obj2> (70)
        on left: 46 47 48
        on right: 44 45
    base <nd_obj2> (71)
        on left: 49 50
        on right: 46 48
    exponent <nd_obj> (72)
        on left: 51
        on right: 46
    mulops <nd_obj> (73)
        on left: 52 53
        on right: 44
    addops <nd_obj> (74)
        on left: 54 55
        on right: 42
    relop <nd_obj> (75)
        on left: 56 57 58 59 60 61
        on right: 29 39
    value <nd_obj2> (76)
        on left: 62 63 64
        on right: 47 49 67
    charbool <nd_obj2> (77)
        on left: 65 66
        on right: 40 68
    valcharbool <nd_obj2> (78)
        on left: 67 68
        on right: 21 29 72
    bools <nd_obj2> (79)
        on left: 69 70
        on right: 65
    return <nd_obj> (80)
        on left: 72 73
        on right: 1
    $@14 (81)
        on left: 71
        on right: 72


State 0

    0 $accept: • program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    program   go to state 5
    entry     go to state 6
    datatype  go to state 7


State 1

    3 datatype: INT •

    $default  reduce using rule 3 (datatype)


State 2

    4 datatype: FLOAT •

    $default  reduce using rule 4 (datatype)


State 3

    5 datatype: CHAR •

    $default  reduce using rule 5 (datatype)


State 4

    6 datatype: BOOL •

    $default  reduce using rule 6 (datatype)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 8


State 6

    1 program: entry • '(' ')' '{' body return '}'

    '('  shift, and go to state 9


State 7

    2 entry: datatype • ID

    ID  shift, and go to state 10


State 8

    0 $accept: program $end •

    $default  accept


State 9

    1 program: entry '(' • ')' '{' body return '}'

    ')'  shift, and go to state 11


State 10

    2 entry: datatype ID •

    $default  reduce using rule 2 (entry)


State 11

    1 program: entry '(' ')' • '{' body return '}'

    '{'  shift, and go to state 12


State 12

    1 program: entry '(' ')' '{' • body return '}'

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 19
    block      go to state 20
    statement  go to state 21


State 13

   17 block: PRINTFF • $@5 '(' printparam ')' ';'

    $default  reduce using rule 16 ($@5)

    $@5  go to state 22


State 14

   20 block: SCANFF • $@6 '(' STR ',' '&' ID $@7 ')' ';'

    $default  reduce using rule 18 ($@6)

    $@6  go to state 23


State 15

   14 block: IF • $@2 '(' condition ')' $@3 '{' body '}' $@4 else

    $default  reduce using rule 11 ($@2)

    $@2  go to state 24


State 16

   10 block: WHILE • $@1 '(' condition ')' '{' body '}'

    $default  reduce using rule 9 ($@1)

    $@1  go to state 25


State 17

   35 statement: DECLARE • datatype ID $@11 init

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    datatype  go to state 26


State 18

   37 statement: ID • $@12 '=' expression
   39          | ID • $@13 relop expression

    '='       reduce using rule 36 ($@12)
    $default  reduce using rule 38 ($@13)

    $@12  go to state 27
    $@13  go to state 28


State 19

    1 program: entry '(' ')' '{' body • return '}'

    RETURN  shift, and go to state 29

    $default  reduce using rule 73 (return)

    return  go to state 30


State 20

    7 body: block • body

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 31
    block      go to state 20
    statement  go to state 21


State 21

   15 block: statement • ';'

    ';'  shift, and go to state 32


State 22

   17 block: PRINTFF $@5 • '(' printparam ')' ';'

    '('  shift, and go to state 33


State 23

   20 block: SCANFF $@6 • '(' STR ',' '&' ID $@7 ')' ';'

    '('  shift, and go to state 34


State 24

   14 block: IF $@2 • '(' condition ')' $@3 '{' body '}' $@4 else

    '('  shift, and go to state 35


State 25

   10 block: WHILE $@1 • '(' condition ')' '{' body '}'

    '('  shift, and go to state 36


State 26

   35 statement: DECLARE datatype • ID $@11 init

    ID  shift, and go to state 37


State 27

   37 statement: ID $@12 • '=' expression

    '='  shift, and go to state 38


State 28

   39 statement: ID $@13 • relop expression

    GTE  shift, and go to state 39
    LTE  shift, and go to state 40
    GT   shift, and go to state 41
    LT   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44

    relop  go to state 45


State 29

   72 return: RETURN • $@14 valcharbool ';'

    $default  reduce using rule 71 ($@14)

    $@14  go to state 46


State 30

    1 program: entry '(' ')' '{' body return • '}'

    '}'  shift, and go to state 47


State 31

    7 body: block body •

    $default  reduce using rule 7 (body)


State 32

   15 block: statement ';' •

    $default  reduce using rule 15 (block)


State 33

   17 block: PRINTFF $@5 '(' • printparam ')' ';'

    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    STR        shift, and go to state 53
    CHARACTER  shift, and go to state 54

    printparam   go to state 55
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 58
    bools        go to state 59


State 34

   20 block: SCANFF $@6 '(' • STR ',' '&' ID $@7 ')' ';'

    STR  shift, and go to state 60


State 35

   14 block: IF $@2 '(' • condition ')' $@3 '{' body '}' $@4 else

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54

    condition    go to state 63
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 64
    bools        go to state 59


State 36

   10 block: WHILE $@1 '(' • condition ')' '{' body '}'

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54

    condition    go to state 65
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 64
    bools        go to state 59


State 37

   35 statement: DECLARE datatype ID • $@11 init

    $default  reduce using rule 34 ($@11)

    $@11  go to state 66


State 38

   37 statement: ID $@12 '=' • expression

    LOG        shift, and go to state 67
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 68

    expression  go to state 69
    term        go to state 70
    factor      go to state 71
    base        go to state 72
    value       go to state 73


State 39

   59 relop: GTE •

    $default  reduce using rule 59 (relop)


State 40

   58 relop: LTE •

    $default  reduce using rule 58 (relop)


State 41

   57 relop: GT •

    $default  reduce using rule 57 (relop)


State 42

   56 relop: LT •

    $default  reduce using rule 56 (relop)


State 43

   60 relop: EQ •

    $default  reduce using rule 60 (relop)


State 44

   61 relop: NE •

    $default  reduce using rule 61 (relop)


State 45

   39 statement: ID $@13 relop • expression

    LOG        shift, and go to state 67
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 68

    expression  go to state 74
    term        go to state 70
    factor      go to state 71
    base        go to state 72
    value       go to state 73


State 46

   72 return: RETURN $@14 • valcharbool ';'

    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54

    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 75
    bools        go to state 59


State 47

    1 program: entry '(' ')' '{' body return '}' •

    $default  reduce using rule 1 (program)


State 48

   69 bools: TRUE •

    $default  reduce using rule 69 (bools)


State 49

   70 bools: FALSE •

    $default  reduce using rule 70 (bools)


State 50

   62 value: NUMBER •

    $default  reduce using rule 62 (value)


State 51

   63 value: FLOAT_NUM •

    $default  reduce using rule 63 (value)


State 52

   64 value: ID •

    $default  reduce using rule 64 (value)


State 53

   22 printparam: STR •

    $default  reduce using rule 22 (printparam)


State 54

   66 charbool: CHARACTER •

    $default  reduce using rule 66 (charbool)


State 55

   17 block: PRINTFF $@5 '(' printparam • ')' ';'

    ')'  shift, and go to state 76


State 56

   67 valcharbool: value •

    $default  reduce using rule 67 (valcharbool)


State 57

   68 valcharbool: charbool •

    $default  reduce using rule 68 (valcharbool)


State 58

   21 printparam: valcharbool •

    $default  reduce using rule 21 (printparam)


State 59

   65 charbool: bools •

    $default  reduce using rule 65 (charbool)


State 60

   20 block: SCANFF $@6 '(' STR • ',' '&' ID $@7 ')' ';'

    ','  shift, and go to state 77


State 61

   31 condition: TRUE • $@9
   69 bools: TRUE •

    AND       reduce using rule 30 ($@9)
    OR        reduce using rule 30 ($@9)
    ')'       reduce using rule 30 ($@9)
    $default  reduce using rule 69 (bools)

    $@9  go to state 78


State 62

   33 condition: FALSE • $@10
   70 bools: FALSE •

    AND       reduce using rule 32 ($@10)
    OR        reduce using rule 32 ($@10)
    ')'       reduce using rule 32 ($@10)
    $default  reduce using rule 70 (bools)

    $@10  go to state 79


State 63

   14 block: IF $@2 '(' condition • ')' $@3 '{' body '}' $@4 else
   27 condition: condition • AND M condition
   28          | condition • OR M condition

    AND  shift, and go to state 80
    OR   shift, and go to state 81
    ')'  shift, and go to state 82


State 64

   29 condition: valcharbool • relop valcharbool

    GTE  shift, and go to state 39
    LTE  shift, and go to state 40
    GT   shift, and go to state 41
    LT   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44

    relop  go to state 83


State 65

   10 block: WHILE $@1 '(' condition • ')' '{' body '}'
   27 condition: condition • AND M condition
   28          | condition • OR M condition

    AND  shift, and go to state 80
    OR   shift, and go to state 81
    ')'  shift, and go to state 84


State 66

   35 statement: DECLARE datatype ID $@11 • init

    '='  shift, and go to state 85

    init  go to state 86


State 67

   47 factor: LOG • '(' value ',' value ')'

    '('  shift, and go to state 87


State 68

   50 base: '(' • expression ')'

    LOG        shift, and go to state 67
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 68

    expression  go to state 88
    term        go to state 70
    factor      go to state 71
    base        go to state 72
    value       go to state 73


State 69

   37 statement: ID $@12 '=' expression •
   42 expression: expression • addops term

    ADD       shift, and go to state 89
    SUBTRACT  shift, and go to state 90

    $default  reduce using rule 37 (statement)

    addops  go to state 91


State 70

   43 expression: term •
   44 term: term • mulops factor

    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 43 (expression)

    mulops  go to state 94


State 71

   45 term: factor •

    $default  reduce using rule 45 (term)


State 72

   46 factor: base • exponent base
   48       | base •

    POW  shift, and go to state 95

    $default  reduce using rule 48 (factor)

    exponent  go to state 96


State 73

   49 base: value •

    $default  reduce using rule 49 (base)


State 74

   39 statement: ID $@13 relop expression •
   42 expression: expression • addops term

    ADD       shift, and go to state 89
    SUBTRACT  shift, and go to state 90

    $default  reduce using rule 39 (statement)

    addops  go to state 91


State 75

   72 return: RETURN $@14 valcharbool • ';'

    ';'  shift, and go to state 97


State 76

   17 block: PRINTFF $@5 '(' printparam ')' • ';'

    ';'  shift, and go to state 98


State 77

   20 block: SCANFF $@6 '(' STR ',' • '&' ID $@7 ')' ';'

    '&'  shift, and go to state 99


State 78

   31 condition: TRUE $@9 •

    $default  reduce using rule 31 (condition)


State 79

   33 condition: FALSE $@10 •

    $default  reduce using rule 33 (condition)


State 80

   27 condition: condition AND • M condition

    $default  reduce using rule 26 (M)

    M  go to state 100


State 81

   28 condition: condition OR • M condition

    $default  reduce using rule 26 (M)

    M  go to state 101


State 82

   14 block: IF $@2 '(' condition ')' • $@3 '{' body '}' $@4 else

    $default  reduce using rule 12 ($@3)

    $@3  go to state 102


State 83

   29 condition: valcharbool relop • valcharbool

    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54

    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 103
    bools        go to state 59


State 84

   10 block: WHILE $@1 '(' condition ')' • '{' body '}'

    '{'  shift, and go to state 104


State 85

   40 init: '=' • charbool
   41     | '=' • expression

    LOG        shift, and go to state 67
    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 68

    expression  go to state 105
    term        go to state 70
    factor      go to state 71
    base        go to state 72
    value       go to state 73
    charbool    go to state 106
    bools       go to state 59


State 86

   35 statement: DECLARE datatype ID $@11 init •

    $default  reduce using rule 35 (statement)


State 87

   47 factor: LOG '(' • value ',' value ')'

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 107


State 88

   42 expression: expression • addops term
   50 base: '(' expression • ')'

    ADD       shift, and go to state 89
    SUBTRACT  shift, and go to state 90
    ')'       shift, and go to state 108

    addops  go to state 91


State 89

   54 addops: ADD •

    $default  reduce using rule 54 (addops)


State 90

   55 addops: SUBTRACT •

    $default  reduce using rule 55 (addops)


State 91

   42 expression: expression addops • term

    LOG        shift, and go to state 67
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 68

    term    go to state 109
    factor  go to state 71
    base    go to state 72
    value   go to state 73


State 92

   52 mulops: MULTIPLY •

    $default  reduce using rule 52 (mulops)


State 93

   53 mulops: DIVIDE •

    $default  reduce using rule 53 (mulops)


State 94

   44 term: term mulops • factor

    LOG        shift, and go to state 67
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 68

    factor  go to state 110
    base    go to state 72
    value   go to state 73


State 95

   51 exponent: POW •

    $default  reduce using rule 51 (exponent)


State 96

   46 factor: base exponent • base

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 68

    base   go to state 111
    value  go to state 73


State 97

   72 return: RETURN $@14 valcharbool ';' •

    $default  reduce using rule 72 (return)


State 98

   17 block: PRINTFF $@5 '(' printparam ')' ';' •

    $default  reduce using rule 17 (block)


State 99

   20 block: SCANFF $@6 '(' STR ',' '&' • ID $@7 ')' ';'

    ID  shift, and go to state 112


State 100

   27 condition: condition AND M • condition

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54

    condition    go to state 113
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 64
    bools        go to state 59


State 101

   28 condition: condition OR M • condition

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54

    condition    go to state 114
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 64
    bools        go to state 59


State 102

   14 block: IF $@2 '(' condition ')' $@3 • '{' body '}' $@4 else

    '{'  shift, and go to state 115


State 103

   29 condition: valcharbool relop valcharbool •

    $default  reduce using rule 29 (condition)


State 104

   10 block: WHILE $@1 '(' condition ')' '{' • body '}'

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 116
    block      go to state 20
    statement  go to state 21


State 105

   41 init: '=' expression •
   42 expression: expression • addops term

    ADD       shift, and go to state 89
    SUBTRACT  shift, and go to state 90

    $default  reduce using rule 41 (init)

    addops  go to state 91


State 106

   40 init: '=' charbool •

    $default  reduce using rule 40 (init)


State 107

   47 factor: LOG '(' value • ',' value ')'

    ','  shift, and go to state 117


State 108

   50 base: '(' expression ')' •

    $default  reduce using rule 50 (base)


State 109

   42 expression: expression addops term •
   44 term: term • mulops factor

    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 42 (expression)

    mulops  go to state 94


State 110

   44 term: term mulops factor •

    $default  reduce using rule 44 (term)


State 111

   46 factor: base exponent base •

    $default  reduce using rule 46 (factor)


State 112

   20 block: SCANFF $@6 '(' STR ',' '&' ID • $@7 ')' ';'

    $default  reduce using rule 19 ($@7)

    $@7  go to state 118


State 113

   27 condition: condition • AND M condition
   27          | condition AND M condition •
   28          | condition • OR M condition

    AND  shift, and go to state 80
    OR   shift, and go to state 81

    AND       [reduce using rule 27 (condition)]
    OR        [reduce using rule 27 (condition)]
    $default  reduce using rule 27 (condition)


State 114

   27 condition: condition • AND M condition
   28          | condition • OR M condition
   28          | condition OR M condition •

    AND  shift, and go to state 80
    OR   shift, and go to state 81

    AND       [reduce using rule 28 (condition)]
    OR        [reduce using rule 28 (condition)]
    $default  reduce using rule 28 (condition)


State 115

   14 block: IF $@2 '(' condition ')' $@3 '{' • body '}' $@4 else

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 119
    block      go to state 20
    statement  go to state 21


State 116

   10 block: WHILE $@1 '(' condition ')' '{' body • '}'

    '}'  shift, and go to state 120


State 117

   47 factor: LOG '(' value ',' • value ')'

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 121


State 118

   20 block: SCANFF $@6 '(' STR ',' '&' ID $@7 • ')' ';'

    ')'  shift, and go to state 122


State 119

   14 block: IF $@2 '(' condition ')' $@3 '{' body • '}' $@4 else

    '}'  shift, and go to state 123


State 120

   10 block: WHILE $@1 '(' condition ')' '{' body '}' •

    $default  reduce using rule 10 (block)


State 121

   47 factor: LOG '(' value ',' value • ')'

    ')'  shift, and go to state 124


State 122

   20 block: SCANFF $@6 '(' STR ',' '&' ID $@7 ')' • ';'

    ';'  shift, and go to state 125


State 123

   14 block: IF $@2 '(' condition ')' $@3 '{' body '}' • $@4 else

    $default  reduce using rule 13 ($@4)

    $@4  go to state 126


State 124

   47 factor: LOG '(' value ',' value ')' •

    $default  reduce using rule 47 (factor)


State 125

   20 block: SCANFF $@6 '(' STR ',' '&' ID $@7 ')' ';' •

    $default  reduce using rule 20 (block)


State 126

   14 block: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 • else

    ELSE  shift, and go to state 127

    $default  reduce using rule 25 (else)

    else  go to state 128


State 127

   24 else: ELSE • $@8 '{' body '}'

    $default  reduce using rule 23 ($@8)

    $@8  go to state 129


State 128

   14 block: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 else •

    $default  reduce using rule 14 (block)


State 129

   24 else: ELSE $@8 • '{' body '}'

    '{'  shift, and go to state 130


State 130

   24 else: ELSE $@8 '{' • body '}'

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 131
    block      go to state 20
    statement  go to state 21


State 131

   24 else: ELSE $@8 '{' body • '}'

    '}'  shift, and go to state 132


State 132

   24 else: ELSE $@8 '{' body '}' •

    $default  reduce using rule 24 (else)
