State 116 conflicts: 2 shift/reduce
State 117 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: entry '(' ')' '{' body return '}'

    2 entry: datatype ID

    3 datatype: INT
    4         | FLOAT
    5         | CHAR
    6         | BOOL

    7 body: block body
    8     | ε

    9 $@1: ε

   10 block: WHILE $@1 '(' condition ')' '{' body '}'

   11 $@2: ε

   12 $@3: ε

   13 $@4: ε

   14 block: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 else
   15      | statement ';'

   16 $@5: ε

   17 block: PRINTFF $@5 '(' printparam ')' ';'

   18 $@6: ε

   19 $@7: ε

   20 block: SCANFF $@6 '(' STR ',' '&' ID $@7 ')' ';'

   21 printparam: valcharbool
   22           | STR

   23 $@8: ε

   24 else: ELSE $@8 '{' body '}'
   25     | ε

   26 M: ε

   27 condition: condition AND M condition
   28          | condition OR M condition
   29          | valcharbool relop valcharbool
   30          | '(' condition ')'

   31 $@9: ε

   32 condition: TRUE $@9

   33 $@10: ε

   34 condition: FALSE $@10

   35 $@11: ε

   36 statement: DECLARE datatype ID $@11 init

   37 $@12: ε

   38 statement: ID $@12 '=' expression

   39 $@13: ε

   40 statement: ID $@13 relop expression

   41 init: '=' charbool
   42     | '=' expression

   43 expression: expression addops term
   44           | term

   45 term: term mulops factor
   46     | factor

   47 factor: base exponent base
   48       | LOG '(' value ',' value ')'
   49       | base

   50 base: value
   51     | '(' expression ')'

   52 exponent: POW

   53 mulops: MULTIPLY
   54       | DIVIDE

   55 addops: ADD
   56       | SUBTRACT

   57 relop: LT
   58      | GT
   59      | LTE
   60      | GTE
   61      | EQ
   62      | NE

   63 value: NUMBER
   64      | FLOAT_NUM
   65      | ID

   66 charbool: bools
   67         | CHARACTER

   68 valcharbool: value
   69            | charbool

   70 bools: TRUE
   71      | FALSE

   72 $@14: ε

   73 return: RETURN $@14 valcharbool ';'
   74       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 20
    '(' (40) 1 10 14 17 20 30 48 51
    ')' (41) 1 10 14 17 20 30 48 51
    ',' (44) 20 48
    ';' (59) 15 17 20 73
    '=' (61) 38 41 42
    '{' (123) 1 10 14 24
    '}' (125) 1 10 14 24
    error (256)
    PRINTFF <nd_obj> (258) 17
    SCANFF <nd_obj> (259) 20
    IF <nd_obj> (260) 14
    ELSE <nd_obj> (261) 24
    WHILE <nd_obj> (262) 10
    RETURN <nd_obj> (263) 73
    DECLARE <nd_obj> (264) 36
    ADD <nd_obj> (265) 55
    SUBTRACT <nd_obj> (266) 56
    MULTIPLY <nd_obj> (267) 53
    DIVIDE <nd_obj> (268) 54
    LOG <nd_obj> (269) 48
    POW <nd_obj> (270) 52
    GTE <nd_obj> (271) 60
    LTE <nd_obj> (272) 59
    GT <nd_obj> (273) 58
    LT <nd_obj> (274) 57
    EQ <nd_obj> (275) 61
    NE <nd_obj> (276) 62
    TRUE <nd_obj> (277) 32 70
    FALSE <nd_obj> (278) 34 71
    AND <nd_obj> (279) 27
    OR <nd_obj> (280) 28
    INT <nd_obj> (281) 3
    FLOAT <nd_obj> (282) 4
    CHAR <nd_obj> (283) 5
    BOOL <nd_obj> (284) 6
    NUMBER <nd_obj> (285) 63
    FLOAT_NUM <nd_obj> (286) 64
    ID <nd_obj> (287) 2 20 36 38 40 65
    STR <nd_obj> (288) 20 22
    CHARACTER <nd_obj> (289) 67


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <nd_obj> (44)
        on left: 1
        on right: 0
    entry <nd_obj> (45)
        on left: 2
        on right: 1
    datatype <nd_obj> (46)
        on left: 3 4 5 6
        on right: 2 36
    body <nd_obj> (47)
        on left: 7 8
        on right: 1 7 10 14 24
    block <nd_obj> (48)
        on left: 10 14 15 17 20
        on right: 7
    $@1 (49)
        on left: 9
        on right: 10
    $@2 (50)
        on left: 11
        on right: 14
    $@3 (51)
        on left: 12
        on right: 14
    $@4 (52)
        on left: 13
        on right: 14
    $@5 (53)
        on left: 16
        on right: 17
    $@6 (54)
        on left: 18
        on right: 20
    $@7 (55)
        on left: 19
        on right: 20
    printparam <nd_obj> (56)
        on left: 21 22
        on right: 17
    else <nd_obj> (57)
        on left: 24 25
        on right: 14
    $@8 (58)
        on left: 23
        on right: 24
    M <nd_obj4> (59)
        on left: 26
        on right: 27 28
    condition <nd_obj3> (60)
        on left: 27 28 29 30 32 34
        on right: 10 14 27 28 30
    $@9 (61)
        on left: 31
        on right: 32
    $@10 (62)
        on left: 33
        on right: 34
    statement <nd_obj> (63)
        on left: 36 38 40
        on right: 15
    $@11 (64)
        on left: 35
        on right: 36
    $@12 (65)
        on left: 37
        on right: 38
    $@13 (66)
        on left: 39
        on right: 40
    init <nd_obj2> (67)
        on left: 41 42
        on right: 36
    expression <nd_obj2> (68)
        on left: 43 44
        on right: 38 40 42 43 51
    term <nd_obj2> (69)
        on left: 45 46
        on right: 43 44 45
    factor <nd_obj2> (70)
        on left: 47 48 49
        on right: 45 46
    base <nd_obj2> (71)
        on left: 50 51
        on right: 47 49
    exponent <nd_obj> (72)
        on left: 52
        on right: 47
    mulops <nd_obj> (73)
        on left: 53 54
        on right: 45
    addops <nd_obj> (74)
        on left: 55 56
        on right: 43
    relop <nd_obj> (75)
        on left: 57 58 59 60 61 62
        on right: 29 40
    value <nd_obj2> (76)
        on left: 63 64 65
        on right: 48 50 68
    charbool <nd_obj2> (77)
        on left: 66 67
        on right: 41 69
    valcharbool <nd_obj2> (78)
        on left: 68 69
        on right: 21 29 73
    bools <nd_obj2> (79)
        on left: 70 71
        on right: 66
    return <nd_obj> (80)
        on left: 73 74
        on right: 1
    $@14 (81)
        on left: 72
        on right: 73


State 0

    0 $accept: • program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    program   go to state 5
    entry     go to state 6
    datatype  go to state 7


State 1

    3 datatype: INT •

    $default  reduce using rule 3 (datatype)


State 2

    4 datatype: FLOAT •

    $default  reduce using rule 4 (datatype)


State 3

    5 datatype: CHAR •

    $default  reduce using rule 5 (datatype)


State 4

    6 datatype: BOOL •

    $default  reduce using rule 6 (datatype)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 8


State 6

    1 program: entry • '(' ')' '{' body return '}'

    '('  shift, and go to state 9


State 7

    2 entry: datatype • ID

    ID  shift, and go to state 10


State 8

    0 $accept: program $end •

    $default  accept


State 9

    1 program: entry '(' • ')' '{' body return '}'

    ')'  shift, and go to state 11


State 10

    2 entry: datatype ID •

    $default  reduce using rule 2 (entry)


State 11

    1 program: entry '(' ')' • '{' body return '}'

    '{'  shift, and go to state 12


State 12

    1 program: entry '(' ')' '{' • body return '}'

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 19
    block      go to state 20
    statement  go to state 21


State 13

   17 block: PRINTFF • $@5 '(' printparam ')' ';'

    $default  reduce using rule 16 ($@5)

    $@5  go to state 22


State 14

   20 block: SCANFF • $@6 '(' STR ',' '&' ID $@7 ')' ';'

    $default  reduce using rule 18 ($@6)

    $@6  go to state 23


State 15

   14 block: IF • $@2 '(' condition ')' $@3 '{' body '}' $@4 else

    $default  reduce using rule 11 ($@2)

    $@2  go to state 24


State 16

   10 block: WHILE • $@1 '(' condition ')' '{' body '}'

    $default  reduce using rule 9 ($@1)

    $@1  go to state 25


State 17

   36 statement: DECLARE • datatype ID $@11 init

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    datatype  go to state 26


State 18

   38 statement: ID • $@12 '=' expression
   40          | ID • $@13 relop expression

    '='       reduce using rule 37 ($@12)
    $default  reduce using rule 39 ($@13)

    $@12  go to state 27
    $@13  go to state 28


State 19

    1 program: entry '(' ')' '{' body • return '}'

    RETURN  shift, and go to state 29

    $default  reduce using rule 74 (return)

    return  go to state 30


State 20

    7 body: block • body

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 31
    block      go to state 20
    statement  go to state 21


State 21

   15 block: statement • ';'

    ';'  shift, and go to state 32


State 22

   17 block: PRINTFF $@5 • '(' printparam ')' ';'

    '('  shift, and go to state 33


State 23

   20 block: SCANFF $@6 • '(' STR ',' '&' ID $@7 ')' ';'

    '('  shift, and go to state 34


State 24

   14 block: IF $@2 • '(' condition ')' $@3 '{' body '}' $@4 else

    '('  shift, and go to state 35


State 25

   10 block: WHILE $@1 • '(' condition ')' '{' body '}'

    '('  shift, and go to state 36


State 26

   36 statement: DECLARE datatype • ID $@11 init

    ID  shift, and go to state 37


State 27

   38 statement: ID $@12 • '=' expression

    '='  shift, and go to state 38


State 28

   40 statement: ID $@13 • relop expression

    GTE  shift, and go to state 39
    LTE  shift, and go to state 40
    GT   shift, and go to state 41
    LT   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44

    relop  go to state 45


State 29

   73 return: RETURN • $@14 valcharbool ';'

    $default  reduce using rule 72 ($@14)

    $@14  go to state 46


State 30

    1 program: entry '(' ')' '{' body return • '}'

    '}'  shift, and go to state 47


State 31

    7 body: block body •

    $default  reduce using rule 7 (body)


State 32

   15 block: statement ';' •

    $default  reduce using rule 15 (block)


State 33

   17 block: PRINTFF $@5 '(' • printparam ')' ';'

    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    STR        shift, and go to state 53
    CHARACTER  shift, and go to state 54

    printparam   go to state 55
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 58
    bools        go to state 59


State 34

   20 block: SCANFF $@6 '(' • STR ',' '&' ID $@7 ')' ';'

    STR  shift, and go to state 60


State 35

   14 block: IF $@2 '(' • condition ')' $@3 '{' body '}' $@4 else

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 63

    condition    go to state 64
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 65
    bools        go to state 59


State 36

   10 block: WHILE $@1 '(' • condition ')' '{' body '}'

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 63

    condition    go to state 66
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 65
    bools        go to state 59


State 37

   36 statement: DECLARE datatype ID • $@11 init

    $default  reduce using rule 35 ($@11)

    $@11  go to state 67


State 38

   38 statement: ID $@12 '=' • expression

    LOG        shift, and go to state 68
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 69

    expression  go to state 70
    term        go to state 71
    factor      go to state 72
    base        go to state 73
    value       go to state 74


State 39

   60 relop: GTE •

    $default  reduce using rule 60 (relop)


State 40

   59 relop: LTE •

    $default  reduce using rule 59 (relop)


State 41

   58 relop: GT •

    $default  reduce using rule 58 (relop)


State 42

   57 relop: LT •

    $default  reduce using rule 57 (relop)


State 43

   61 relop: EQ •

    $default  reduce using rule 61 (relop)


State 44

   62 relop: NE •

    $default  reduce using rule 62 (relop)


State 45

   40 statement: ID $@13 relop • expression

    LOG        shift, and go to state 68
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 69

    expression  go to state 75
    term        go to state 71
    factor      go to state 72
    base        go to state 73
    value       go to state 74


State 46

   73 return: RETURN $@14 • valcharbool ';'

    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54

    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 76
    bools        go to state 59


State 47

    1 program: entry '(' ')' '{' body return '}' •

    $default  reduce using rule 1 (program)


State 48

   70 bools: TRUE •

    $default  reduce using rule 70 (bools)


State 49

   71 bools: FALSE •

    $default  reduce using rule 71 (bools)


State 50

   63 value: NUMBER •

    $default  reduce using rule 63 (value)


State 51

   64 value: FLOAT_NUM •

    $default  reduce using rule 64 (value)


State 52

   65 value: ID •

    $default  reduce using rule 65 (value)


State 53

   22 printparam: STR •

    $default  reduce using rule 22 (printparam)


State 54

   67 charbool: CHARACTER •

    $default  reduce using rule 67 (charbool)


State 55

   17 block: PRINTFF $@5 '(' printparam • ')' ';'

    ')'  shift, and go to state 77


State 56

   68 valcharbool: value •

    $default  reduce using rule 68 (valcharbool)


State 57

   69 valcharbool: charbool •

    $default  reduce using rule 69 (valcharbool)


State 58

   21 printparam: valcharbool •

    $default  reduce using rule 21 (printparam)


State 59

   66 charbool: bools •

    $default  reduce using rule 66 (charbool)


State 60

   20 block: SCANFF $@6 '(' STR • ',' '&' ID $@7 ')' ';'

    ','  shift, and go to state 78


State 61

   32 condition: TRUE • $@9
   70 bools: TRUE •

    AND       reduce using rule 31 ($@9)
    OR        reduce using rule 31 ($@9)
    ')'       reduce using rule 31 ($@9)
    $default  reduce using rule 70 (bools)

    $@9  go to state 79


State 62

   34 condition: FALSE • $@10
   71 bools: FALSE •

    AND       reduce using rule 33 ($@10)
    OR        reduce using rule 33 ($@10)
    ')'       reduce using rule 33 ($@10)
    $default  reduce using rule 71 (bools)

    $@10  go to state 80


State 63

   30 condition: '(' • condition ')'

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 63

    condition    go to state 81
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 65
    bools        go to state 59


State 64

   14 block: IF $@2 '(' condition • ')' $@3 '{' body '}' $@4 else
   27 condition: condition • AND M condition
   28          | condition • OR M condition

    AND  shift, and go to state 82
    OR   shift, and go to state 83
    ')'  shift, and go to state 84


State 65

   29 condition: valcharbool • relop valcharbool

    GTE  shift, and go to state 39
    LTE  shift, and go to state 40
    GT   shift, and go to state 41
    LT   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44

    relop  go to state 85


State 66

   10 block: WHILE $@1 '(' condition • ')' '{' body '}'
   27 condition: condition • AND M condition
   28          | condition • OR M condition

    AND  shift, and go to state 82
    OR   shift, and go to state 83
    ')'  shift, and go to state 86


State 67

   36 statement: DECLARE datatype ID $@11 • init

    '='  shift, and go to state 87

    init  go to state 88


State 68

   48 factor: LOG • '(' value ',' value ')'

    '('  shift, and go to state 89


State 69

   51 base: '(' • expression ')'

    LOG        shift, and go to state 68
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 69

    expression  go to state 90
    term        go to state 71
    factor      go to state 72
    base        go to state 73
    value       go to state 74


State 70

   38 statement: ID $@12 '=' expression •
   43 expression: expression • addops term

    ADD       shift, and go to state 91
    SUBTRACT  shift, and go to state 92

    $default  reduce using rule 38 (statement)

    addops  go to state 93


State 71

   44 expression: term •
   45 term: term • mulops factor

    MULTIPLY  shift, and go to state 94
    DIVIDE    shift, and go to state 95

    $default  reduce using rule 44 (expression)

    mulops  go to state 96


State 72

   46 term: factor •

    $default  reduce using rule 46 (term)


State 73

   47 factor: base • exponent base
   49       | base •

    POW  shift, and go to state 97

    $default  reduce using rule 49 (factor)

    exponent  go to state 98


State 74

   50 base: value •

    $default  reduce using rule 50 (base)


State 75

   40 statement: ID $@13 relop expression •
   43 expression: expression • addops term

    ADD       shift, and go to state 91
    SUBTRACT  shift, and go to state 92

    $default  reduce using rule 40 (statement)

    addops  go to state 93


State 76

   73 return: RETURN $@14 valcharbool • ';'

    ';'  shift, and go to state 99


State 77

   17 block: PRINTFF $@5 '(' printparam ')' • ';'

    ';'  shift, and go to state 100


State 78

   20 block: SCANFF $@6 '(' STR ',' • '&' ID $@7 ')' ';'

    '&'  shift, and go to state 101


State 79

   32 condition: TRUE $@9 •

    $default  reduce using rule 32 (condition)


State 80

   34 condition: FALSE $@10 •

    $default  reduce using rule 34 (condition)


State 81

   27 condition: condition • AND M condition
   28          | condition • OR M condition
   30          | '(' condition • ')'

    AND  shift, and go to state 82
    OR   shift, and go to state 83
    ')'  shift, and go to state 102


State 82

   27 condition: condition AND • M condition

    $default  reduce using rule 26 (M)

    M  go to state 103


State 83

   28 condition: condition OR • M condition

    $default  reduce using rule 26 (M)

    M  go to state 104


State 84

   14 block: IF $@2 '(' condition ')' • $@3 '{' body '}' $@4 else

    $default  reduce using rule 12 ($@3)

    $@3  go to state 105


State 85

   29 condition: valcharbool relop • valcharbool

    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54

    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 106
    bools        go to state 59


State 86

   10 block: WHILE $@1 '(' condition ')' • '{' body '}'

    '{'  shift, and go to state 107


State 87

   41 init: '=' • charbool
   42     | '=' • expression

    LOG        shift, and go to state 68
    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 69

    expression  go to state 108
    term        go to state 71
    factor      go to state 72
    base        go to state 73
    value       go to state 74
    charbool    go to state 109
    bools       go to state 59


State 88

   36 statement: DECLARE datatype ID $@11 init •

    $default  reduce using rule 36 (statement)


State 89

   48 factor: LOG '(' • value ',' value ')'

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 110


State 90

   43 expression: expression • addops term
   51 base: '(' expression • ')'

    ADD       shift, and go to state 91
    SUBTRACT  shift, and go to state 92
    ')'       shift, and go to state 111

    addops  go to state 93


State 91

   55 addops: ADD •

    $default  reduce using rule 55 (addops)


State 92

   56 addops: SUBTRACT •

    $default  reduce using rule 56 (addops)


State 93

   43 expression: expression addops • term

    LOG        shift, and go to state 68
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 69

    term    go to state 112
    factor  go to state 72
    base    go to state 73
    value   go to state 74


State 94

   53 mulops: MULTIPLY •

    $default  reduce using rule 53 (mulops)


State 95

   54 mulops: DIVIDE •

    $default  reduce using rule 54 (mulops)


State 96

   45 term: term mulops • factor

    LOG        shift, and go to state 68
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 69

    factor  go to state 113
    base    go to state 73
    value   go to state 74


State 97

   52 exponent: POW •

    $default  reduce using rule 52 (exponent)


State 98

   47 factor: base exponent • base

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 69

    base   go to state 114
    value  go to state 74


State 99

   73 return: RETURN $@14 valcharbool ';' •

    $default  reduce using rule 73 (return)


State 100

   17 block: PRINTFF $@5 '(' printparam ')' ';' •

    $default  reduce using rule 17 (block)


State 101

   20 block: SCANFF $@6 '(' STR ',' '&' • ID $@7 ')' ';'

    ID  shift, and go to state 115


State 102

   30 condition: '(' condition ')' •

    $default  reduce using rule 30 (condition)


State 103

   27 condition: condition AND M • condition

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 63

    condition    go to state 116
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 65
    bools        go to state 59


State 104

   28 condition: condition OR M • condition

    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 63

    condition    go to state 117
    value        go to state 56
    charbool     go to state 57
    valcharbool  go to state 65
    bools        go to state 59


State 105

   14 block: IF $@2 '(' condition ')' $@3 • '{' body '}' $@4 else

    '{'  shift, and go to state 118


State 106

   29 condition: valcharbool relop valcharbool •

    $default  reduce using rule 29 (condition)


State 107

   10 block: WHILE $@1 '(' condition ')' '{' • body '}'

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 119
    block      go to state 20
    statement  go to state 21


State 108

   42 init: '=' expression •
   43 expression: expression • addops term

    ADD       shift, and go to state 91
    SUBTRACT  shift, and go to state 92

    $default  reduce using rule 42 (init)

    addops  go to state 93


State 109

   41 init: '=' charbool •

    $default  reduce using rule 41 (init)


State 110

   48 factor: LOG '(' value • ',' value ')'

    ','  shift, and go to state 120


State 111

   51 base: '(' expression ')' •

    $default  reduce using rule 51 (base)


State 112

   43 expression: expression addops term •
   45 term: term • mulops factor

    MULTIPLY  shift, and go to state 94
    DIVIDE    shift, and go to state 95

    $default  reduce using rule 43 (expression)

    mulops  go to state 96


State 113

   45 term: term mulops factor •

    $default  reduce using rule 45 (term)


State 114

   47 factor: base exponent base •

    $default  reduce using rule 47 (factor)


State 115

   20 block: SCANFF $@6 '(' STR ',' '&' ID • $@7 ')' ';'

    $default  reduce using rule 19 ($@7)

    $@7  go to state 121


State 116

   27 condition: condition • AND M condition
   27          | condition AND M condition •
   28          | condition • OR M condition

    AND  shift, and go to state 82
    OR   shift, and go to state 83

    AND       [reduce using rule 27 (condition)]
    OR        [reduce using rule 27 (condition)]
    $default  reduce using rule 27 (condition)


State 117

   27 condition: condition • AND M condition
   28          | condition • OR M condition
   28          | condition OR M condition •

    AND  shift, and go to state 82
    OR   shift, and go to state 83

    AND       [reduce using rule 28 (condition)]
    OR        [reduce using rule 28 (condition)]
    $default  reduce using rule 28 (condition)


State 118

   14 block: IF $@2 '(' condition ')' $@3 '{' • body '}' $@4 else

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 122
    block      go to state 20
    statement  go to state 21


State 119

   10 block: WHILE $@1 '(' condition ')' '{' body • '}'

    '}'  shift, and go to state 123


State 120

   48 factor: LOG '(' value ',' • value ')'

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 124


State 121

   20 block: SCANFF $@6 '(' STR ',' '&' ID $@7 • ')' ';'

    ')'  shift, and go to state 125


State 122

   14 block: IF $@2 '(' condition ')' $@3 '{' body • '}' $@4 else

    '}'  shift, and go to state 126


State 123

   10 block: WHILE $@1 '(' condition ')' '{' body '}' •

    $default  reduce using rule 10 (block)


State 124

   48 factor: LOG '(' value ',' value • ')'

    ')'  shift, and go to state 127


State 125

   20 block: SCANFF $@6 '(' STR ',' '&' ID $@7 ')' • ';'

    ';'  shift, and go to state 128


State 126

   14 block: IF $@2 '(' condition ')' $@3 '{' body '}' • $@4 else

    $default  reduce using rule 13 ($@4)

    $@4  go to state 129


State 127

   48 factor: LOG '(' value ',' value ')' •

    $default  reduce using rule 48 (factor)


State 128

   20 block: SCANFF $@6 '(' STR ',' '&' ID $@7 ')' ';' •

    $default  reduce using rule 20 (block)


State 129

   14 block: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 • else

    ELSE  shift, and go to state 130

    $default  reduce using rule 25 (else)

    else  go to state 131


State 130

   24 else: ELSE • $@8 '{' body '}'

    $default  reduce using rule 23 ($@8)

    $@8  go to state 132


State 131

   14 block: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 else •

    $default  reduce using rule 14 (block)


State 132

   24 else: ELSE $@8 • '{' body '}'

    '{'  shift, and go to state 133


State 133

   24 else: ELSE $@8 '{' • body '}'

    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    IF       shift, and go to state 15
    WHILE    shift, and go to state 16
    DECLARE  shift, and go to state 17
    ID       shift, and go to state 18

    $default  reduce using rule 8 (body)

    body       go to state 134
    block      go to state 20
    statement  go to state 21


State 134

   24 else: ELSE $@8 '{' body • '}'

    '}'  shift, and go to state 135


State 135

   24 else: ELSE $@8 '{' body '}' •

    $default  reduce using rule 24 (else)
