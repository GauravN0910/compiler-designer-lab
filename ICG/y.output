State 59 conflicts: 1 shift/reduce, 1 reduce/reduce
State 74 conflicts: 1 reduce/reduce
State 109 conflicts: 1 reduce/reduce
State 152 conflicts: 2 shift/reduce
State 153 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: entry '(' typeArgs ')' $@1 '{' body return '}' program
    3        | ε

    4 entry: datatype ID

    5 datatype: INT
    6         | FLOAT
    7         | CHAR
    8         | BOOL

    9 body: block body
   10     | ε

   11 $@2: ε

   12 $@3: ε

   13 block: WHILE $@2 '(' condition ')' $@3 '{' body '}'

   14 $@4: ε

   15 $@5: ε

   16 $@6: ε

   17 block: IF $@4 '(' condition ')' $@5 '{' body '}' $@6 else
   18      | statement ';'

   19 $@7: ε

   20 block: PRINTFF $@7 '(' printparam ')' ';'

   21 $@8: ε

   22 $@9: ε

   23 block: SCANFF $@8 '(' STR ',' '&' input $@9 ')' ';'
   24      | ID '(' args ')' ';'

   25 input: ID
   26      | array

   27 $@10: ε

   28 typeArgs: datatype ID $@10 ',' typeArgs
   29         | datatype ID
   30         | ε

   31 args: expression ',' args
   32     | value ',' args
   33     | expression
   34     | value
   35     | ε

   36 printparam: valcharbool
   37           | STR

   38 $@11: ε

   39 else: ELSE $@11 '{' body '}'
   40     | ε

   41 M: ε

   42 condition: condition AND M condition
   43          | condition OR M condition
   44          | valcharbool relop valcharbool
   45          | '(' condition ')'

   46 $@12: ε

   47 condition: TRUE $@12

   48 $@13: ε

   49 condition: FALSE $@13

   50 $@14: ε

   51 statement: DECLARE datatype ID $@14 init

   52 $@15: ε

   53 statement: ID $@15 '=' assign

   54 $@16: ε

   55 statement: ID $@16 relop expression
   56          | array '=' expression
   57          | array '=' array

   58 assign: expression
   59       | array
   60       | ID '(' args ')'

   61 init: '=' charbool
   62     | '=' expression
   63     | '[' NUMBER ']'

   64 expression: expression addops term
   65           | term

   66 term: term mulops factor
   67     | factor

   68 factor: base exponent base
   69       | LOG '(' value ',' value ')'
   70       | base

   71 base: value
   72     | '(' expression ')'

   73 exponent: POW

   74 mulops: MULTIPLY
   75       | DIVIDE

   76 addops: ADD
   77       | SUBTRACT

   78 relop: LT
   79      | GT
   80      | LTE
   81      | GTE
   82      | EQ
   83      | NE

   84 value: NUMBER
   85      | FLOAT_NUM
   86      | ID
   87      | array

   88 array: ID '[' expression ']'

   89 charbool: bools
   90         | CHARACTER

   91 valcharbool: value
   92            | charbool

   93 bools: TRUE
   94      | FALSE

   95 $@17: ε

   96 return: RETURN $@17 valcharbool ';'
   97       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 23
    '(' (40) 2 13 17 20 23 24 45 60 69 72
    ')' (41) 2 13 17 20 23 24 45 60 69 72
    ',' (44) 23 28 31 32 69
    ';' (59) 18 20 23 24 96
    '=' (61) 53 56 57 61 62
    '[' (91) 63 88
    ']' (93) 63 88
    '{' (123) 2 13 17 39
    '}' (125) 2 13 17 39
    error (256)
    PRINTFF <nd_obj> (258) 20
    SCANFF <nd_obj> (259) 23
    IF <nd_obj> (260) 17
    ELSE <nd_obj> (261) 39
    WHILE <nd_obj> (262) 13
    RETURN <nd_obj> (263) 96
    DECLARE <nd_obj> (264) 51
    ADD <nd_obj> (265) 76
    SUBTRACT <nd_obj> (266) 77
    MULTIPLY <nd_obj> (267) 74
    DIVIDE <nd_obj> (268) 75
    LOG <nd_obj> (269) 69
    POW <nd_obj> (270) 73
    GTE <nd_obj> (271) 81
    LTE <nd_obj> (272) 80
    GT <nd_obj> (273) 79
    LT <nd_obj> (274) 78
    EQ <nd_obj> (275) 82
    NE <nd_obj> (276) 83
    TRUE <nd_obj> (277) 47 93
    FALSE <nd_obj> (278) 49 94
    AND <nd_obj> (279) 42
    OR <nd_obj> (280) 43
    INT <nd_obj> (281) 5
    FLOAT <nd_obj> (282) 6
    CHAR <nd_obj> (283) 7
    BOOL <nd_obj> (284) 8
    NUMBER <nd_obj> (285) 63 84
    FLOAT_NUM <nd_obj> (286) 85
    ID <nd_obj> (287) 4 24 25 28 29 51 53 55 60 86 88
    STR <nd_obj> (288) 23 37
    CHARACTER <nd_obj> (289) 90


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program <nd_obj> (46)
        on left: 2 3
        on right: 0 2
    $@1 (47)
        on left: 1
        on right: 2
    entry <nd_obj> (48)
        on left: 4
        on right: 2
    datatype <nd_obj> (49)
        on left: 5 6 7 8
        on right: 4 28 29 51
    body <nd_obj> (50)
        on left: 9 10
        on right: 2 9 13 17 39
    block <nd_obj> (51)
        on left: 13 17 18 20 23 24
        on right: 9
    $@2 (52)
        on left: 11
        on right: 13
    $@3 (53)
        on left: 12
        on right: 13
    $@4 (54)
        on left: 14
        on right: 17
    $@5 (55)
        on left: 15
        on right: 17
    $@6 (56)
        on left: 16
        on right: 17
    $@7 (57)
        on left: 19
        on right: 20
    $@8 (58)
        on left: 21
        on right: 23
    $@9 (59)
        on left: 22
        on right: 23
    input <nd_obj> (60)
        on left: 25 26
        on right: 23
    typeArgs <nd_obj3> (61)
        on left: 28 29 30
        on right: 2 28
    $@10 (62)
        on left: 27
        on right: 28
    args <nd_obj3> (63)
        on left: 31 32 33 34 35
        on right: 24 31 32 60
    printparam <nd_obj> (64)
        on left: 36 37
        on right: 20
    else <nd_obj> (65)
        on left: 39 40
        on right: 17
    $@11 (66)
        on left: 38
        on right: 39
    M <nd_obj4> (67)
        on left: 41
        on right: 42 43
    condition <nd_obj3> (68)
        on left: 42 43 44 45 47 49
        on right: 13 17 42 43 45
    $@12 (69)
        on left: 46
        on right: 47
    $@13 (70)
        on left: 48
        on right: 49
    statement <nd_obj> (71)
        on left: 51 53 55 56 57
        on right: 18
    $@14 (72)
        on left: 50
        on right: 51
    $@15 (73)
        on left: 52
        on right: 53
    $@16 (74)
        on left: 54
        on right: 55
    assign <nd_obj2> (75)
        on left: 58 59 60
        on right: 53
    init <nd_obj2> (76)
        on left: 61 62 63
        on right: 51
    expression <nd_obj2> (77)
        on left: 64 65
        on right: 31 33 55 56 58 62 64 72 88
    term <nd_obj2> (78)
        on left: 66 67
        on right: 64 65 66
    factor <nd_obj2> (79)
        on left: 68 69 70
        on right: 66 67
    base <nd_obj2> (80)
        on left: 71 72
        on right: 68 70
    exponent <nd_obj> (81)
        on left: 73
        on right: 68
    mulops <nd_obj> (82)
        on left: 74 75
        on right: 66
    addops <nd_obj> (83)
        on left: 76 77
        on right: 64
    relop <nd_obj> (84)
        on left: 78 79 80 81 82 83
        on right: 44 55
    value <nd_obj2> (85)
        on left: 84 85 86 87
        on right: 32 34 69 71 91
    array <nd_obj2> (86)
        on left: 88
        on right: 26 56 57 59 87
    charbool <nd_obj2> (87)
        on left: 89 90
        on right: 61 92
    valcharbool <nd_obj2> (88)
        on left: 91 92
        on right: 36 44 96
    bools <nd_obj2> (89)
        on left: 93 94
        on right: 89
    return <nd_obj> (90)
        on left: 96 97
        on right: 2
    $@17 (91)
        on left: 95
        on right: 96


State 0

    0 $accept: • program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    $default  reduce using rule 3 (program)

    program   go to state 5
    entry     go to state 6
    datatype  go to state 7


State 1

    5 datatype: INT •

    $default  reduce using rule 5 (datatype)


State 2

    6 datatype: FLOAT •

    $default  reduce using rule 6 (datatype)


State 3

    7 datatype: CHAR •

    $default  reduce using rule 7 (datatype)


State 4

    8 datatype: BOOL •

    $default  reduce using rule 8 (datatype)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 8


State 6

    2 program: entry • '(' typeArgs ')' $@1 '{' body return '}' program

    '('  shift, and go to state 9


State 7

    4 entry: datatype • ID

    ID  shift, and go to state 10


State 8

    0 $accept: program $end •

    $default  accept


State 9

    2 program: entry '(' • typeArgs ')' $@1 '{' body return '}' program

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    $default  reduce using rule 30 (typeArgs)

    datatype  go to state 11
    typeArgs  go to state 12


State 10

    4 entry: datatype ID •

    $default  reduce using rule 4 (entry)


State 11

   28 typeArgs: datatype • ID $@10 ',' typeArgs
   29         | datatype • ID

    ID  shift, and go to state 13


State 12

    2 program: entry '(' typeArgs • ')' $@1 '{' body return '}' program

    ')'  shift, and go to state 14


State 13

   28 typeArgs: datatype ID • $@10 ',' typeArgs
   29         | datatype ID •

    ')'       reduce using rule 29 (typeArgs)
    $default  reduce using rule 27 ($@10)

    $@10  go to state 15


State 14

    2 program: entry '(' typeArgs ')' • $@1 '{' body return '}' program

    $default  reduce using rule 1 ($@1)

    $@1  go to state 16


State 15

   28 typeArgs: datatype ID $@10 • ',' typeArgs

    ','  shift, and go to state 17


State 16

    2 program: entry '(' typeArgs ')' $@1 • '{' body return '}' program

    '{'  shift, and go to state 18


State 17

   28 typeArgs: datatype ID $@10 ',' • typeArgs

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    $default  reduce using rule 30 (typeArgs)

    datatype  go to state 11
    typeArgs  go to state 19


State 18

    2 program: entry '(' typeArgs ')' $@1 '{' • body return '}' program

    PRINTFF  shift, and go to state 20
    SCANFF   shift, and go to state 21
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    DECLARE  shift, and go to state 24
    ID       shift, and go to state 25

    $default  reduce using rule 10 (body)

    body       go to state 26
    block      go to state 27
    statement  go to state 28
    array      go to state 29


State 19

   28 typeArgs: datatype ID $@10 ',' typeArgs •

    $default  reduce using rule 28 (typeArgs)


State 20

   20 block: PRINTFF • $@7 '(' printparam ')' ';'

    $default  reduce using rule 19 ($@7)

    $@7  go to state 30


State 21

   23 block: SCANFF • $@8 '(' STR ',' '&' input $@9 ')' ';'

    $default  reduce using rule 21 ($@8)

    $@8  go to state 31


State 22

   17 block: IF • $@4 '(' condition ')' $@5 '{' body '}' $@6 else

    $default  reduce using rule 14 ($@4)

    $@4  go to state 32


State 23

   13 block: WHILE • $@2 '(' condition ')' $@3 '{' body '}'

    $default  reduce using rule 11 ($@2)

    $@2  go to state 33


State 24

   51 statement: DECLARE • datatype ID $@14 init

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    datatype  go to state 34


State 25

   24 block: ID • '(' args ')' ';'
   53 statement: ID • $@15 '=' assign
   55          | ID • $@16 relop expression
   88 array: ID • '[' expression ']'

    '('  shift, and go to state 35
    '['  shift, and go to state 36

    '='       reduce using rule 52 ($@15)
    $default  reduce using rule 54 ($@16)

    $@15  go to state 37
    $@16  go to state 38


State 26

    2 program: entry '(' typeArgs ')' $@1 '{' body • return '}' program

    RETURN  shift, and go to state 39

    $default  reduce using rule 97 (return)

    return  go to state 40


State 27

    9 body: block • body

    PRINTFF  shift, and go to state 20
    SCANFF   shift, and go to state 21
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    DECLARE  shift, and go to state 24
    ID       shift, and go to state 25

    $default  reduce using rule 10 (body)

    body       go to state 41
    block      go to state 27
    statement  go to state 28
    array      go to state 29


State 28

   18 block: statement • ';'

    ';'  shift, and go to state 42


State 29

   56 statement: array • '=' expression
   57          | array • '=' array

    '='  shift, and go to state 43


State 30

   20 block: PRINTFF $@7 • '(' printparam ')' ';'

    '('  shift, and go to state 44


State 31

   23 block: SCANFF $@8 • '(' STR ',' '&' input $@9 ')' ';'

    '('  shift, and go to state 45


State 32

   17 block: IF $@4 • '(' condition ')' $@5 '{' body '}' $@6 else

    '('  shift, and go to state 46


State 33

   13 block: WHILE $@2 • '(' condition ')' $@3 '{' body '}'

    '('  shift, and go to state 47


State 34

   51 statement: DECLARE datatype • ID $@14 init

    ID  shift, and go to state 48


State 35

   24 block: ID '(' • args ')' ';'

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    $default  reduce using rule 35 (args)

    args        go to state 54
    expression  go to state 55
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 59
    array       go to state 60


State 36

   88 array: ID '[' • expression ']'

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    expression  go to state 61
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 62
    array       go to state 60


State 37

   53 statement: ID $@15 • '=' assign

    '='  shift, and go to state 63


State 38

   55 statement: ID $@16 • relop expression

    GTE  shift, and go to state 64
    LTE  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    EQ   shift, and go to state 68
    NE   shift, and go to state 69

    relop  go to state 70


State 39

   96 return: RETURN • $@17 valcharbool ';'

    $default  reduce using rule 95 ($@17)

    $@17  go to state 71


State 40

    2 program: entry '(' typeArgs ')' $@1 '{' body return • '}' program

    '}'  shift, and go to state 72


State 41

    9 body: block body •

    $default  reduce using rule 9 (body)


State 42

   18 block: statement ';' •

    $default  reduce using rule 18 (block)


State 43

   56 statement: array '=' • expression
   57          | array '=' • array

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    expression  go to state 73
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 62
    array       go to state 74


State 44

   20 block: PRINTFF $@7 '(' • printparam ')' ';'

    TRUE       shift, and go to state 75
    FALSE      shift, and go to state 76
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    STR        shift, and go to state 77
    CHARACTER  shift, and go to state 78

    printparam   go to state 79
    value        go to state 80
    array        go to state 60
    charbool     go to state 81
    valcharbool  go to state 82
    bools        go to state 83


State 45

   23 block: SCANFF $@8 '(' • STR ',' '&' input $@9 ')' ';'

    STR  shift, and go to state 84


State 46

   17 block: IF $@4 '(' • condition ')' $@5 '{' body '}' $@6 else

    TRUE       shift, and go to state 85
    FALSE      shift, and go to state 86
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 78
    '('        shift, and go to state 87

    condition    go to state 88
    value        go to state 80
    array        go to state 60
    charbool     go to state 81
    valcharbool  go to state 89
    bools        go to state 83


State 47

   13 block: WHILE $@2 '(' • condition ')' $@3 '{' body '}'

    TRUE       shift, and go to state 85
    FALSE      shift, and go to state 86
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 78
    '('        shift, and go to state 87

    condition    go to state 90
    value        go to state 80
    array        go to state 60
    charbool     go to state 81
    valcharbool  go to state 89
    bools        go to state 83


State 48

   51 statement: DECLARE datatype ID • $@14 init

    $default  reduce using rule 50 ($@14)

    $@14  go to state 91


State 49

   69 factor: LOG • '(' value ',' value ')'

    '('  shift, and go to state 92


State 50

   84 value: NUMBER •

    $default  reduce using rule 84 (value)


State 51

   85 value: FLOAT_NUM •

    $default  reduce using rule 85 (value)


State 52

   86 value: ID •
   88 array: ID • '[' expression ']'

    '['  shift, and go to state 36

    $default  reduce using rule 86 (value)


State 53

   72 base: '(' • expression ')'

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    expression  go to state 93
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 62
    array       go to state 60


State 54

   24 block: ID '(' args • ')' ';'

    ')'  shift, and go to state 94


State 55

   31 args: expression • ',' args
   33     | expression •
   64 expression: expression • addops term

    ADD       shift, and go to state 95
    SUBTRACT  shift, and go to state 96
    ','       shift, and go to state 97

    $default  reduce using rule 33 (args)

    addops  go to state 98


State 56

   65 expression: term •
   66 term: term • mulops factor

    MULTIPLY  shift, and go to state 99
    DIVIDE    shift, and go to state 100

    $default  reduce using rule 65 (expression)

    mulops  go to state 101


State 57

   67 term: factor •

    $default  reduce using rule 67 (term)


State 58

   68 factor: base • exponent base
   70       | base •

    POW  shift, and go to state 102

    $default  reduce using rule 70 (factor)

    exponent  go to state 103


State 59

   32 args: value • ',' args
   34     | value •
   71 base: value •

    ','  shift, and go to state 104

    ')'       reduce using rule 34 (args)
    ')'       [reduce using rule 71 (base)]
    ','       [reduce using rule 71 (base)]
    $default  reduce using rule 71 (base)


State 60

   87 value: array •

    $default  reduce using rule 87 (value)


State 61

   64 expression: expression • addops term
   88 array: ID '[' expression • ']'

    ADD       shift, and go to state 95
    SUBTRACT  shift, and go to state 96
    ']'       shift, and go to state 105

    addops  go to state 98


State 62

   71 base: value •

    $default  reduce using rule 71 (base)


State 63

   53 statement: ID $@15 '=' • assign

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 106
    '('        shift, and go to state 53

    assign      go to state 107
    expression  go to state 108
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 62
    array       go to state 109


State 64

   81 relop: GTE •

    $default  reduce using rule 81 (relop)


State 65

   80 relop: LTE •

    $default  reduce using rule 80 (relop)


State 66

   79 relop: GT •

    $default  reduce using rule 79 (relop)


State 67

   78 relop: LT •

    $default  reduce using rule 78 (relop)


State 68

   82 relop: EQ •

    $default  reduce using rule 82 (relop)


State 69

   83 relop: NE •

    $default  reduce using rule 83 (relop)


State 70

   55 statement: ID $@16 relop • expression

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    expression  go to state 110
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 62
    array       go to state 60


State 71

   96 return: RETURN $@17 • valcharbool ';'

    TRUE       shift, and go to state 75
    FALSE      shift, and go to state 76
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 78

    value        go to state 80
    array        go to state 60
    charbool     go to state 81
    valcharbool  go to state 111
    bools        go to state 83


State 72

    2 program: entry '(' typeArgs ')' $@1 '{' body return '}' • program

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    BOOL   shift, and go to state 4

    $default  reduce using rule 3 (program)

    program   go to state 112
    entry     go to state 6
    datatype  go to state 7


State 73

   56 statement: array '=' expression •
   64 expression: expression • addops term

    ADD       shift, and go to state 95
    SUBTRACT  shift, and go to state 96

    $default  reduce using rule 56 (statement)

    addops  go to state 98


State 74

   57 statement: array '=' array •
   87 value: array •

    ';'       reduce using rule 57 (statement)
    ';'       [reduce using rule 87 (value)]
    $default  reduce using rule 87 (value)


State 75

   93 bools: TRUE •

    $default  reduce using rule 93 (bools)


State 76

   94 bools: FALSE •

    $default  reduce using rule 94 (bools)


State 77

   37 printparam: STR •

    $default  reduce using rule 37 (printparam)


State 78

   90 charbool: CHARACTER •

    $default  reduce using rule 90 (charbool)


State 79

   20 block: PRINTFF $@7 '(' printparam • ')' ';'

    ')'  shift, and go to state 113


State 80

   91 valcharbool: value •

    $default  reduce using rule 91 (valcharbool)


State 81

   92 valcharbool: charbool •

    $default  reduce using rule 92 (valcharbool)


State 82

   36 printparam: valcharbool •

    $default  reduce using rule 36 (printparam)


State 83

   89 charbool: bools •

    $default  reduce using rule 89 (charbool)


State 84

   23 block: SCANFF $@8 '(' STR • ',' '&' input $@9 ')' ';'

    ','  shift, and go to state 114


State 85

   47 condition: TRUE • $@12
   93 bools: TRUE •

    AND       reduce using rule 46 ($@12)
    OR        reduce using rule 46 ($@12)
    ')'       reduce using rule 46 ($@12)
    $default  reduce using rule 93 (bools)

    $@12  go to state 115


State 86

   49 condition: FALSE • $@13
   94 bools: FALSE •

    AND       reduce using rule 48 ($@13)
    OR        reduce using rule 48 ($@13)
    ')'       reduce using rule 48 ($@13)
    $default  reduce using rule 94 (bools)

    $@13  go to state 116


State 87

   45 condition: '(' • condition ')'

    TRUE       shift, and go to state 85
    FALSE      shift, and go to state 86
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 78
    '('        shift, and go to state 87

    condition    go to state 117
    value        go to state 80
    array        go to state 60
    charbool     go to state 81
    valcharbool  go to state 89
    bools        go to state 83


State 88

   17 block: IF $@4 '(' condition • ')' $@5 '{' body '}' $@6 else
   42 condition: condition • AND M condition
   43          | condition • OR M condition

    AND  shift, and go to state 118
    OR   shift, and go to state 119
    ')'  shift, and go to state 120


State 89

   44 condition: valcharbool • relop valcharbool

    GTE  shift, and go to state 64
    LTE  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    EQ   shift, and go to state 68
    NE   shift, and go to state 69

    relop  go to state 121


State 90

   13 block: WHILE $@2 '(' condition • ')' $@3 '{' body '}'
   42 condition: condition • AND M condition
   43          | condition • OR M condition

    AND  shift, and go to state 118
    OR   shift, and go to state 119
    ')'  shift, and go to state 122


State 91

   51 statement: DECLARE datatype ID $@14 • init

    '='  shift, and go to state 123
    '['  shift, and go to state 124

    init  go to state 125


State 92

   69 factor: LOG '(' • value ',' value ')'

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 126
    array  go to state 60


State 93

   64 expression: expression • addops term
   72 base: '(' expression • ')'

    ADD       shift, and go to state 95
    SUBTRACT  shift, and go to state 96
    ')'       shift, and go to state 127

    addops  go to state 98


State 94

   24 block: ID '(' args ')' • ';'

    ';'  shift, and go to state 128


State 95

   76 addops: ADD •

    $default  reduce using rule 76 (addops)


State 96

   77 addops: SUBTRACT •

    $default  reduce using rule 77 (addops)


State 97

   31 args: expression ',' • args

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    $default  reduce using rule 35 (args)

    args        go to state 129
    expression  go to state 55
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 59
    array       go to state 60


State 98

   64 expression: expression addops • term

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    term    go to state 130
    factor  go to state 57
    base    go to state 58
    value   go to state 62
    array   go to state 60


State 99

   74 mulops: MULTIPLY •

    $default  reduce using rule 74 (mulops)


State 100

   75 mulops: DIVIDE •

    $default  reduce using rule 75 (mulops)


State 101

   66 term: term mulops • factor

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    factor  go to state 131
    base    go to state 58
    value   go to state 62
    array   go to state 60


State 102

   73 exponent: POW •

    $default  reduce using rule 73 (exponent)


State 103

   68 factor: base exponent • base

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    base   go to state 132
    value  go to state 62
    array  go to state 60


State 104

   32 args: value ',' • args

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    $default  reduce using rule 35 (args)

    args        go to state 133
    expression  go to state 55
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 59
    array       go to state 60


State 105

   88 array: ID '[' expression ']' •

    $default  reduce using rule 88 (array)


State 106

   60 assign: ID • '(' args ')'
   86 value: ID •
   88 array: ID • '[' expression ']'

    '('  shift, and go to state 134
    '['  shift, and go to state 36

    $default  reduce using rule 86 (value)


State 107

   53 statement: ID $@15 '=' assign •

    $default  reduce using rule 53 (statement)


State 108

   58 assign: expression •
   64 expression: expression • addops term

    ADD       shift, and go to state 95
    SUBTRACT  shift, and go to state 96

    $default  reduce using rule 58 (assign)

    addops  go to state 98


State 109

   59 assign: array •
   87 value: array •

    ';'       reduce using rule 59 (assign)
    ';'       [reduce using rule 87 (value)]
    $default  reduce using rule 87 (value)


State 110

   55 statement: ID $@16 relop expression •
   64 expression: expression • addops term

    ADD       shift, and go to state 95
    SUBTRACT  shift, and go to state 96

    $default  reduce using rule 55 (statement)

    addops  go to state 98


State 111

   96 return: RETURN $@17 valcharbool • ';'

    ';'  shift, and go to state 135


State 112

    2 program: entry '(' typeArgs ')' $@1 '{' body return '}' program •

    $default  reduce using rule 2 (program)


State 113

   20 block: PRINTFF $@7 '(' printparam ')' • ';'

    ';'  shift, and go to state 136


State 114

   23 block: SCANFF $@8 '(' STR ',' • '&' input $@9 ')' ';'

    '&'  shift, and go to state 137


State 115

   47 condition: TRUE $@12 •

    $default  reduce using rule 47 (condition)


State 116

   49 condition: FALSE $@13 •

    $default  reduce using rule 49 (condition)


State 117

   42 condition: condition • AND M condition
   43          | condition • OR M condition
   45          | '(' condition • ')'

    AND  shift, and go to state 118
    OR   shift, and go to state 119
    ')'  shift, and go to state 138


State 118

   42 condition: condition AND • M condition

    $default  reduce using rule 41 (M)

    M  go to state 139


State 119

   43 condition: condition OR • M condition

    $default  reduce using rule 41 (M)

    M  go to state 140


State 120

   17 block: IF $@4 '(' condition ')' • $@5 '{' body '}' $@6 else

    $default  reduce using rule 15 ($@5)

    $@5  go to state 141


State 121

   44 condition: valcharbool relop • valcharbool

    TRUE       shift, and go to state 75
    FALSE      shift, and go to state 76
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 78

    value        go to state 80
    array        go to state 60
    charbool     go to state 81
    valcharbool  go to state 142
    bools        go to state 83


State 122

   13 block: WHILE $@2 '(' condition ')' • $@3 '{' body '}'

    $default  reduce using rule 12 ($@3)

    $@3  go to state 143


State 123

   61 init: '=' • charbool
   62     | '=' • expression

    LOG        shift, and go to state 49
    TRUE       shift, and go to state 75
    FALSE      shift, and go to state 76
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 78
    '('        shift, and go to state 53

    expression  go to state 144
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 62
    array       go to state 60
    charbool    go to state 145
    bools       go to state 83


State 124

   63 init: '[' • NUMBER ']'

    NUMBER  shift, and go to state 146


State 125

   51 statement: DECLARE datatype ID $@14 init •

    $default  reduce using rule 51 (statement)


State 126

   69 factor: LOG '(' value • ',' value ')'

    ','  shift, and go to state 147


State 127

   72 base: '(' expression ')' •

    $default  reduce using rule 72 (base)


State 128

   24 block: ID '(' args ')' ';' •

    $default  reduce using rule 24 (block)


State 129

   31 args: expression ',' args •

    $default  reduce using rule 31 (args)


State 130

   64 expression: expression addops term •
   66 term: term • mulops factor

    MULTIPLY  shift, and go to state 99
    DIVIDE    shift, and go to state 100

    $default  reduce using rule 64 (expression)

    mulops  go to state 101


State 131

   66 term: term mulops factor •

    $default  reduce using rule 66 (term)


State 132

   68 factor: base exponent base •

    $default  reduce using rule 68 (factor)


State 133

   32 args: value ',' args •

    $default  reduce using rule 32 (args)


State 134

   60 assign: ID '(' • args ')'

    LOG        shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    '('        shift, and go to state 53

    $default  reduce using rule 35 (args)

    args        go to state 148
    expression  go to state 55
    term        go to state 56
    factor      go to state 57
    base        go to state 58
    value       go to state 59
    array       go to state 60


State 135

   96 return: RETURN $@17 valcharbool ';' •

    $default  reduce using rule 96 (return)


State 136

   20 block: PRINTFF $@7 '(' printparam ')' ';' •

    $default  reduce using rule 20 (block)


State 137

   23 block: SCANFF $@8 '(' STR ',' '&' • input $@9 ')' ';'

    ID  shift, and go to state 149

    input  go to state 150
    array  go to state 151


State 138

   45 condition: '(' condition ')' •

    $default  reduce using rule 45 (condition)


State 139

   42 condition: condition AND M • condition

    TRUE       shift, and go to state 85
    FALSE      shift, and go to state 86
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 78
    '('        shift, and go to state 87

    condition    go to state 152
    value        go to state 80
    array        go to state 60
    charbool     go to state 81
    valcharbool  go to state 89
    bools        go to state 83


State 140

   43 condition: condition OR M • condition

    TRUE       shift, and go to state 85
    FALSE      shift, and go to state 86
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52
    CHARACTER  shift, and go to state 78
    '('        shift, and go to state 87

    condition    go to state 153
    value        go to state 80
    array        go to state 60
    charbool     go to state 81
    valcharbool  go to state 89
    bools        go to state 83


State 141

   17 block: IF $@4 '(' condition ')' $@5 • '{' body '}' $@6 else

    '{'  shift, and go to state 154


State 142

   44 condition: valcharbool relop valcharbool •

    $default  reduce using rule 44 (condition)


State 143

   13 block: WHILE $@2 '(' condition ')' $@3 • '{' body '}'

    '{'  shift, and go to state 155


State 144

   62 init: '=' expression •
   64 expression: expression • addops term

    ADD       shift, and go to state 95
    SUBTRACT  shift, and go to state 96

    $default  reduce using rule 62 (init)

    addops  go to state 98


State 145

   61 init: '=' charbool •

    $default  reduce using rule 61 (init)


State 146

   63 init: '[' NUMBER • ']'

    ']'  shift, and go to state 156


State 147

   69 factor: LOG '(' value ',' • value ')'

    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 157
    array  go to state 60


State 148

   60 assign: ID '(' args • ')'

    ')'  shift, and go to state 158


State 149

   25 input: ID •
   88 array: ID • '[' expression ']'

    '['  shift, and go to state 36

    $default  reduce using rule 25 (input)


State 150

   23 block: SCANFF $@8 '(' STR ',' '&' input • $@9 ')' ';'

    $default  reduce using rule 22 ($@9)

    $@9  go to state 159


State 151

   26 input: array •

    $default  reduce using rule 26 (input)


State 152

   42 condition: condition • AND M condition
   42          | condition AND M condition •
   43          | condition • OR M condition

    AND  shift, and go to state 118
    OR   shift, and go to state 119

    AND       [reduce using rule 42 (condition)]
    OR        [reduce using rule 42 (condition)]
    $default  reduce using rule 42 (condition)


State 153

   42 condition: condition • AND M condition
   43          | condition • OR M condition
   43          | condition OR M condition •

    AND  shift, and go to state 118
    OR   shift, and go to state 119

    AND       [reduce using rule 43 (condition)]
    OR        [reduce using rule 43 (condition)]
    $default  reduce using rule 43 (condition)


State 154

   17 block: IF $@4 '(' condition ')' $@5 '{' • body '}' $@6 else

    PRINTFF  shift, and go to state 20
    SCANFF   shift, and go to state 21
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    DECLARE  shift, and go to state 24
    ID       shift, and go to state 25

    $default  reduce using rule 10 (body)

    body       go to state 160
    block      go to state 27
    statement  go to state 28
    array      go to state 29


State 155

   13 block: WHILE $@2 '(' condition ')' $@3 '{' • body '}'

    PRINTFF  shift, and go to state 20
    SCANFF   shift, and go to state 21
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    DECLARE  shift, and go to state 24
    ID       shift, and go to state 25

    $default  reduce using rule 10 (body)

    body       go to state 161
    block      go to state 27
    statement  go to state 28
    array      go to state 29


State 156

   63 init: '[' NUMBER ']' •

    $default  reduce using rule 63 (init)


State 157

   69 factor: LOG '(' value ',' value • ')'

    ')'  shift, and go to state 162


State 158

   60 assign: ID '(' args ')' •

    $default  reduce using rule 60 (assign)


State 159

   23 block: SCANFF $@8 '(' STR ',' '&' input $@9 • ')' ';'

    ')'  shift, and go to state 163


State 160

   17 block: IF $@4 '(' condition ')' $@5 '{' body • '}' $@6 else

    '}'  shift, and go to state 164


State 161

   13 block: WHILE $@2 '(' condition ')' $@3 '{' body • '}'

    '}'  shift, and go to state 165


State 162

   69 factor: LOG '(' value ',' value ')' •

    $default  reduce using rule 69 (factor)


State 163

   23 block: SCANFF $@8 '(' STR ',' '&' input $@9 ')' • ';'

    ';'  shift, and go to state 166


State 164

   17 block: IF $@4 '(' condition ')' $@5 '{' body '}' • $@6 else

    $default  reduce using rule 16 ($@6)

    $@6  go to state 167


State 165

   13 block: WHILE $@2 '(' condition ')' $@3 '{' body '}' •

    $default  reduce using rule 13 (block)


State 166

   23 block: SCANFF $@8 '(' STR ',' '&' input $@9 ')' ';' •

    $default  reduce using rule 23 (block)


State 167

   17 block: IF $@4 '(' condition ')' $@5 '{' body '}' $@6 • else

    ELSE  shift, and go to state 168

    $default  reduce using rule 40 (else)

    else  go to state 169


State 168

   39 else: ELSE • $@11 '{' body '}'

    $default  reduce using rule 38 ($@11)

    $@11  go to state 170


State 169

   17 block: IF $@4 '(' condition ')' $@5 '{' body '}' $@6 else •

    $default  reduce using rule 17 (block)


State 170

   39 else: ELSE $@11 • '{' body '}'

    '{'  shift, and go to state 171


State 171

   39 else: ELSE $@11 '{' • body '}'

    PRINTFF  shift, and go to state 20
    SCANFF   shift, and go to state 21
    IF       shift, and go to state 22
    WHILE    shift, and go to state 23
    DECLARE  shift, and go to state 24
    ID       shift, and go to state 25

    $default  reduce using rule 10 (body)

    body       go to state 172
    block      go to state 27
    statement  go to state 28
    array      go to state 29


State 172

   39 else: ELSE $@11 '{' body • '}'

    '}'  shift, and go to state 173


State 173

   39 else: ELSE $@11 '{' body '}' •

    $default  reduce using rule 39 (else)
